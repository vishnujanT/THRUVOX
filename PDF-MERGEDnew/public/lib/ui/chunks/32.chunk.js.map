{"version":3,"sources":["webpack:///./src/ui/src/components/StylePicker/ColorPicker/ColorPicker.js","webpack:///./src/ui/src/components/StylePicker/ColorPicker/index.js","webpack:///./src/ui/src/components/StylePicker/ColorPicker/ColorPicker.scss?cb36","webpack:///./src/ui/src/components/StylePicker/ColorPicker/ColorPicker.scss","webpack:///./src/ui/src/components/RichTextStyleEditor/RichTextStyleEditor.scss?bfb4","webpack:///./src/ui/src/components/RichTextStyleEditor/RichTextStyleEditor.scss","webpack:///./src/ui/src/components/RichTextStyleEditor/RichTextStyleEditor.js","webpack:///./src/ui/src/components/RichTextStyleEditor/index.js","webpack:///./src/ui/src/components/StylePicker/StylePicker.scss?9588","webpack:///./src/ui/src/components/StylePicker/StylePicker.scss","webpack:///./src/ui/src/components/StylePicker/SnapModeToggle/index.js","webpack:///./src/ui/src/components/StylePicker/SnapModeToggle/SnapModeToggle.js","webpack:///./src/ui/src/helpers/stylePanelHelper.js","webpack:///./src/ui/src/components/StylePicker/StylePicker.js","webpack:///./src/ui/src/components/StylePicker/index.js","webpack:///./src/ui/src/components/StylePanel/StylePanel.js","webpack:///./src/ui/src/components/StylePanel/StylePanel.scss?fc22","webpack:///./src/ui/src/components/StylePanel/StylePanel.scss","webpack:///./src/ui/src/components/StylePanel/StylePanelContainer.js","webpack:///./src/ui/src/components/StylePanel/index.js"],"names":["parseColor","color","parsedColor","toHexString","toLowerCase","transparentIcon","width","height","className","classNames","stroke","x1","y1","x2","y2","strokeWidth","strokeLinecap","propTypes","PropTypes","any","ColorPicker","onColorChange","hasTransparentColor","activeTool","type","activeToolName","Object","values","window","Core","Tools","ToolNames","includes","EDIT","store","useStore","t","useTranslation","dispatch","useDispatch","colors","useSelector","state","selectors","getColors","useState","selectedColor","setSelectedColor","isExpanded","setIsExpanded","forceExpandRef","useRef","useEffect","current","getCustomColorAndRemove","customColor","getCustomColor","getState","actions","setCustomColor","handleAddColor","useCallback","openElement","getInstanceNode","addEventListener","Events","VISIBILITY_CHANGED","onVisibilityChanged","e","detail","element","isVisible","newColors","setColors","removeEventListener","length","palette","map","push","indexOf","shouldHideShowMoreButton","showCopyButtonDisabled","isDeleteDisabled","slice","i","key","onClick","aria-label","active","cell","border","style","backgroundColor","Button","img","title","dataElement","indexToDelete","nextIndex","splice","disabled","hidden","api","content","__esModule","default","module","options","styleTag","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","annotation","object","editor","shape","TextColor","RichTextStyle","isFreeTextAutoSize","bool","onFreeTextSizeToggle","func","onPropertyChange","onRichTextStyleChange","isRedaction","RichTextStyleEditor","fonts","getFonts","shallowEqual","isRichTextEditMode","setIsRichTextEditMode","format","setFormat","editorRef","annotationRef","propertiesRef","oldSelectionRef","handleSelectionChange","range","oldRange","setSelection","index","getFormat","handleTextChange","getSelection","core","disableElements","DataElements","ANNOTATION_STYLE_POPUP","enableElements","StrokeStyle","err","console","error","stylesTemp","getRichTextStyle","Font","FontSize","TextAlign","TextVerticalAlign","bold","italic","underline","strikeout","calculatedFontSize","getCalculatedFontSize","handleEditorBlur","handleEditorFocus","properties","Annotations","Color","Array","isArray","lastSelectedColor","applyFormat","formatKey","value","defulats","strike","onMouseDown","preventDefault","TextStylePicker","property","blur","FreeTextAnnotation","getAutoSizeType","AutoSizeTypes","NONE","doc","getDocument","pageNumber","pageInfo","getPageInfo","pageMatrix","getPageMatrix","pageRotation","getPageRotation","fitText","adjustFreeTextBoundingBox","setTimeout","getAnnotationManager","getEditBoxManager","focusBox","newSelection","currentFormat","handleTextFormatChange","stateless","isFreeText","name","handleColorChange","React","memo","SnapModeToggle","Scale","Precision","isSnapModeEnabled","wasDocumentSwappedToClientSide","getType","workerTypes","WEBVIEWER_SERVER","isWebViewerServerDocument","isEligibleDocumentForSnapping","PDF","showMeasurementSnappingOption","isFullPDFEnabled","Choice","id","label","i18next","checked","onChange","event","enableSnapping","target","mode","getDocumentViewer","SnapMode","e_DefaultSnapMode","POINT_ON_LINE","getMeasurementTools","tool","setSnapMode","setEnableSnapMode","shouldHideStylePanelOptions","toolName","SignatureFormFieldCreateTool","CheckBoxFormFieldCreateTool","RadioButtonFormFieldCreateTool","AddParagraphTool","AddImageContentTool","some","getTool","shouldHideOpacitySlider","TextFormFieldCreateTool","RedactionCreateTool","shouldHideTransparentFillColor","stylePanelSectionTitles","section","toolTitles","withCloudyStyle","defaultStrokeStyles","concat","cloudyStrokeStyle","onStyleChange","isRequired","sliderProperties","arrayOf","string","isEllipse","redactionLabelProperties","isFreeHand","showLineStyleOptions","isArc","isInFormFieldCreationMode","startLineStyle","endLineStyle","strokeStyle","onLineStyleChange","handleRichTextStyleChange","activeType","StylePicker","StrokeColor","strokeColor","setStrokeColor","startingLineStyle","setStartingLineStyle","endingLineStyle","setEndingLineStyle","strokeLineStyle","setStrokeLineStyle","FillColor","fillColor","setFillColor","showFillColorAndCollapsablePanelSections","RectangleCreateTool","EllipseCreateTool","PolygonCreateTool","PolygonCloudCreateTool","EllipseMeasurementCreateTool","AreaMeasurementCreateTool","FreeTextCreateTool","CalloutCreateTool","hasFillColorAndCollapsablePanelSections","hideStrokeSlider","TextUnderlineCreateTool","TextHighlightCreateTool","TextSquigglyCreateTool","TextStrikeoutCreateTool","CountMeasurementCreateTool","RubberStampCreateTool","shouldHideStrokeSlider","showSnapModeCheckbox","DistanceMeasurementCreateTool","ArcMeasurementCreateTool","PerimeterMeasurementCreateTool","RectangularAreaMeasurementCreateTool","CloudyRectangularAreaMeasurementCreateTool","hasSnapModeCheckbox","showTextStyle","shouldShowTextStyle","RICH_TEXT_STYLE_CONTAINER","STROKE_STYLE_CONTAINER","onSliderChange","Opacity","StrokeThickness","isElementDisabled","STYLE_OPTION","isElementOpen","FILL_COLOR_CONTAINER","OPACITY_CONTAINER","isStyleOptionDisabled","isStrokeStyleContainerActive","isFillColorContainerActive","isOpacityContainerActive","isTextStyleContainerActive","panelItems","togglePanelItem","closeElement","openTextStyleContainer","openElements","RICH_TEXT_EDITOR","openStrokeStyleContainer","openFillColorContainer","openOpacityContainer","renderSlider","shouldHideSliderTitle","sliderProps","lineStart","circleRadius","displayProperty","getDisplayValue","Math","round","OPACITY_SLIDER","getCirclePosition","lineLength","convertRelativeCirclePositionToValue","circlePosition","withInputField","inputFieldType","min","max","step","getLocalValue","opacity","parseInt","strokeThickness","placeOfDecimal","floor","toString","split","parseFloat","toFixed","STROKE_THICKNESS_SLIDER","getSliderProps","Slider","renderDivider","onOpenProps","useOnFreeTextEdit","toUpperCase","tabIndex","onKeyDown","role","Icon","glyph","LabelTextEditor","placeholderText","colorMapKey","Dropdown","images","defaultStartLineStyles","onClickItem","currentSelectionKey","defaultEndLineStyles","StylePanel","getToolButtonObjects","isAnnotationToolStyleSyncingEnabled","getActiveDocumentViewerKey","isPanelOpen","toolButtonObject","activeDocumentViewerKey","colorProperties","showStyles","setShowStyles","noToolStyle","setNoToolStyle","setIsEllipse","setIsFreeText","setIsRedaction","setIsFreeHand","setIsArc","setIsInFormFieldCreationMode","setStyle","setStartLineStyle","setEndLineStyle","setStrokeStyle","panelTitle","setPanelTitle","annotationCreateToolNames","getAnnotationCreateToolNames","setShowLineStyleOptions","isAutoSizeFont","setIsAutoSizeFont","currentTool","getToolMode","setActiveTool","setToolMode","defaultTool","getPanelTitleOnAnnotationSelected","annot","isContentEditPlaceholder","ToolName","setPanelTitleForSelectedTool","updateStylePanelProps","extraStyles","RedactionAnnotation","OverlayText","getStartStyle","getEndStyle","dashes","getStrokeStyle","onAnnotationSelected","annotations","action","EllipseAnnotation","FreeHandAnnotation","ArcAnnotation","getFormFieldCreationManager","getDataWithKey","mapToolNameToKey","hasLineEndings","AnnotationEditTool","handleToolModeChange","newTool","ELLIPSE","FREE_TEXT","REDACTION","FREEHAND","FREEHAND_HIGHLIGHT","ARC","toolStyles","getToolStyles","StartLineStyle","EndLineStyle","selectedAnnotations","getSelectedAnnotations","noToolSelected","newStyle","annotationsToUpdate","colorRGB","hexToRGBA","r","g","b","a","setToolStyles","getEditor","hasFocus","background","redrawAnnotation","sectionPropertyMap","start","middle","end","setStartStyle","lineStyle","shift","Style","Dashes","setEndStyle","handleFreeTextAutoSizeToggle","originalProperty","originalValue","activeToolRichTextStyle","getTextDecoration","richTextStyle","0","updateAnnotationRichTextStyle","complete","StylePanelContainer","DataElementWrapper"],"mappings":"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","file":"chunks/32.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport './ColorPicker.scss';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport actions from 'actions';\nimport { useDispatch, useStore, useSelector } from 'react-redux';\nimport Events from 'constants/events';\nimport { getInstanceNode } from 'helpers/getRootNode';\nimport selectors from 'selectors';\nimport Button from 'components/Button';\n\nconst parseColor = (color) => {\n  if (!color) {\n    return color;\n  }\n  let parsedColor = color;\n  if (parsedColor?.toHexString) {\n    parsedColor = parsedColor.toHexString();\n  }\n  if (parsedColor?.toLowerCase) {\n    parsedColor = parsedColor.toLowerCase();\n  }\n\n  return parsedColor;\n};\n\nconst TRANSPARENT_COLOR = 'transparent';\n\nconst transparentIcon = (\n  <svg\n    width=\"100%\"\n    height=\"100%\"\n    className={classNames('transparent')}\n  >\n    <line stroke=\"#d82e28\" x1=\"0\" y1=\"100%\" x2=\"100%\" y2=\"0\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n  </svg>\n);\n\n\nconst propTypes = {\n  color: PropTypes.any\n};\n\nconst ColorPicker = ({\n  onColorChange,\n  hasTransparentColor = false,\n  color,\n  activeTool,\n  type,\n}) => {\n  const activeToolName = Object.values(window.Core.Tools.ToolNames).includes(activeTool) ? activeTool : window.Core.Tools.ToolNames.EDIT;\n  const store = useStore();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [colors] = useSelector((state) => [\n    selectors.getColors(state, activeToolName, type),\n  ]);\n  const [selectedColor, setSelectedColor] = useState();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const forceExpandRef = useRef(true);\n\n  useEffect(() => {\n    forceExpandRef.current = true;\n  }, [activeToolName, color]);\n\n  useEffect(() => {\n    if (color) {\n      setSelectedColor(parseColor(color));\n    }\n  }, [color]);\n\n  const getCustomColorAndRemove = () => {\n    const customColor = selectors.getCustomColor(store.getState());\n    dispatch(actions.setCustomColor(null));\n    return customColor;\n  };\n\n  const handleAddColor = useCallback(() => {\n    dispatch(actions.openElement('ColorPickerModal'));\n    const onVisibilityChanged = (e) => {\n      const { element, isVisible } = e.detail;\n      if (element === 'ColorPickerModal' && !isVisible) {\n        const color = parseColor(getCustomColorAndRemove());\n        if (color) {\n          if (colors.includes(color)) {\n            setSelectedColor(color);\n            onColorChange(color);\n          } else {\n            const newColors = [...colors, color];\n            dispatch(actions.setColors(newColors, activeToolName, type, true));\n            setSelectedColor(color);\n            onColorChange(color);\n          }\n        }\n      }\n      getInstanceNode().removeEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\n    };\n    getInstanceNode().addEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\n  }, [colors?.length, dispatch, setSelectedColor, onColorChange, getCustomColorAndRemove, type, activeToolName]);\n\n  const handleDelete = () => {\n    const color = parseColor(selectedColor);\n    const newColors = [...colors];\n    const indexToDelete = newColors.indexOf(color);\n    if (indexToDelete > -1) {\n      const nextIndex = indexToDelete === newColors.length - 1 ? 0 : indexToDelete + 1;\n      setSelectedColor(colors[nextIndex]);\n      onColorChange(colors[nextIndex]);\n      newColors.splice(indexToDelete, 1);\n      dispatch(actions.setColors(newColors, activeToolName, type, true));\n    }\n  };\n\n  const handleCopyColor = () => {\n    const color = parseColor(selectedColor);\n    const newColors = [...colors, color];\n    dispatch(actions.setColors(newColors, activeToolName, type, true));\n  };\n\n  const toggleExpanded = () => {\n    const newValue = !isExpanded;\n    setIsExpanded(newValue);\n  };\n\n  let palette = colors.map((color) => color.toLowerCase());\n  if (hasTransparentColor) {\n    palette.push(TRANSPARENT_COLOR);\n  }\n\n  if (!selectedColor) {\n    setSelectedColor(palette[0]);\n  }\n\n  if (palette.indexOf(selectedColor) > 6 && !isExpanded && forceExpandRef.current) {\n    setIsExpanded(true);\n    forceExpandRef.current = false;\n  }\n\n  const shouldHideShowMoreButton = palette.length <= 7;\n  const showCopyButtonDisabled = !(selectedColor && !palette.includes(selectedColor));\n  const isDeleteDisabled = palette.length <= 1 || !showCopyButtonDisabled;\n\n  if (!isExpanded) {\n    palette = palette.slice(0, 7);\n  }\n\n  return (\n    <>\n      <div className={classNames('ColorPalette')}>\n        {palette.map((color) => parseColor(color)).map((color, i) => (\n          !color\n            ? <div key={i} className=\"dummy-cell\"/>\n            : <button\n              key={i}\n              className=\"cell-container\"\n              onClick={() => {\n                setSelectedColor(color);\n                onColorChange(color);\n              }}\n              aria-label={`${t('option.colorPalette.colorLabel')} ${i + 1}`}\n            >\n              <div\n                className={classNames({\n                  'cell-outer': true,\n                  active: parseColor(selectedColor) === color || (!parseColor(selectedColor) && color === TRANSPARENT_COLOR),\n                })}\n              >\n                <div\n                  className={classNames({\n                    cell: true,\n                    border: color === '#ffffff' || color === TRANSPARENT_COLOR,\n                  })}\n                  style={{ backgroundColor: color }}\n                >\n                  {color === TRANSPARENT_COLOR && transparentIcon}\n                </div>\n              </div>\n            </button>\n        ))}\n      </div>\n      <div className=\"palette-controls\">\n        <div className=\"button-container\">\n          <Button\n            img=\"icon-header-zoom-in-line\"\n            title={t('action.addNewColor')}\n            onClick={handleAddColor}\n            className=\"control-button\"\n            dataElement=\"addCustomColor\"\n          />\n          <Button\n            img=\"icon-delete-line\"\n            title={t('action.deleteColor')}\n            onClick={handleDelete}\n            disabled={isDeleteDisabled}\n            className=\"control-button\"\n            dataElement=\"deleteSelectedColor\"\n          />\n          <Button\n            img=\"icon-copy2\"\n            title={t('action.copySelectedColor')}\n            onClick={handleCopyColor}\n            disabled={showCopyButtonDisabled}\n            className=\"control-button\"\n            dataElement=\"copySelectedColor\"\n          />\n        </div>\n        <button className={classNames('show-more-button control-button', {\n          hidden: shouldHideShowMoreButton,\n        })} onClick={toggleExpanded}>\n          {t(isExpanded ? 'message.showLess' : 'message.showMore')}\n        </button>\n      </div>\n    </>\n  );\n};\n\nColorPicker.propTypes = propTypes;\n\nexport default ColorPicker;","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../../node_modules/sass-loader/dist/cjs.js!./ColorPicker.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePicker .ColorPalette{display:flex;flex-wrap:wrap;display:grid;grid-template-columns:repeat(7,1fr);grid-row-gap:8px;row-gap:8px;justify-items:center}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.StylePicker .ColorPalette{width:196px}}.StylePicker .ColorPalette.padding{padding:4px 12px 8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette{max-width:450px;width:auto}}@media(max-width:640px)and (-ms-high-contrast:active),(max-width:640px)and (-ms-high-contrast:none){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette{width:308px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette{max-width:450px;width:auto}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette{width:308px}}}.StylePicker .ColorPalette .cell-container{padding:0;border:none;background-color:transparent;flex:1 0 14%;cursor:pointer;width:28px;height:28px;display:flex;align-items:center;justify-content:center}:host(:not([data-tabbing=true])) .StylePicker .ColorPalette .cell-container,html:not([data-tabbing=true]) .StylePicker .ColorPalette .cell-container{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container{width:44px;height:44px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container{width:44px;height:44px}}.StylePicker .ColorPalette .cell-container .cell-outer.active{border:1px solid var(--color-palette-border);width:26px;height:26px;border-radius:10000000px;display:flex;align-items:center;justify-content:center}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container .cell-outer.active{width:36px;height:36px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container .cell-outer.active{width:36px;height:36px}}.StylePicker .ColorPalette .cell-container .cell-outer .cell{width:18px;height:18px;border-radius:10000000px}.StylePicker .ColorPalette .cell-container .cell-outer .cell .transparent{border:2px solid var(--faded-text);border-radius:10000000px}.StylePicker .ColorPalette .cell-container .cell-outer .cell.border{border:1px solid var(--white-color-palette-border)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container .cell-outer .cell{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container .cell-outer .cell{width:24px;height:24px}}.StylePicker .palette-controls{padding-right:12px;padding-left:2px;display:flex;justify-content:space-between}.StylePicker .palette-controls .button-container{display:flex;grid-gap:8px;gap:8px}.StylePicker .palette-controls .control-button{display:flex;align-items:center;justify-content:center;text-align:center;min-width:32px;min-height:32px;padding:0;border:none;background-color:transparent;cursor:pointer;border-radius:4px}:host(:not([data-tabbing=true])) .StylePicker .palette-controls .control-button,html:not([data-tabbing=true]) .StylePicker .palette-controls .control-button{outline:none}.StylePicker .palette-controls .control-button.show-more-button{color:var(--ribbon-active-color)}.StylePicker .palette-controls .control-button.show-more-button:hover{background:none;color:var(--primary-button-hover)}.StylePicker .palette-controls .control-button:disabled{cursor:default}.StylePicker .palette-controls .control-button:disabled .Icon{color:var(--disabled-icon)}.StylePicker .palette-controls .control-button.hidden{display:none}.StylePicker .palette-controls .control-button:hover{background:var(--view-header-button-hover)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./RichTextStyleEditor.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}@-webkit-keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@-webkit-keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}@keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}.RichTextStyleEditor .menu-items .icon-grid{padding-top:12px;grid-row-gap:12px;row-gap:12px}.RichTextStyleEditor .menu-items .icon-grid .row{padding-top:0}.RichTextStyleEditor .menu-items .icon-grid .row.isRedaction{padding-bottom:8px}.RichTextStyleEditor .menu-items .icon-grid .auto-size-checkbox{padding-top:4px;padding-bottom:8px}.RichTextStyleEditor .Dropdown__wrapper{width:100%}.RichTextStyleEditor .Dropdown__wrapper .Dropdown{width:100%!important}.RichTextStyleEditor .Dropdown__wrapper .Dropdown__items{right:unset}.RichTextStyleEditor .FontSizeDropdown{width:100%}.RichTextStyleEditor .palette-controls{margin-top:8px}.RichTextStyleEditor .ColorPalette{padding-top:8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RichTextStyleEditor .icon-grid{display:flex;flex-direction:column}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .RichTextStyleEditor .icon-grid{display:flex;flex-direction:column}}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ColorPicker from 'components/StylePicker/ColorPicker';\nimport core from 'core';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport './RichTextStyleEditor.scss';\nimport DataElements from 'constants/dataElement';\nimport TextStylePicker from 'components/TextStylePicker';\n\nconst propTypes = {\n  annotation: PropTypes.object,\n  editor: PropTypes.object,\n  style: PropTypes.shape({\n    TextColor: PropTypes.object,\n    RichTextStyle: PropTypes.any,\n  }),\n  isFreeTextAutoSize: PropTypes.bool,\n  onFreeTextSizeToggle: PropTypes.func,\n  onPropertyChange: PropTypes.func,\n  onRichTextStyleChange: PropTypes.func,\n  isRedaction: PropTypes.bool,\n};\n\nconst RichTextStyleEditor = ({\n  annotation, editor,\n  style,\n  isFreeTextAutoSize,\n  onFreeTextSizeToggle,\n  onPropertyChange,\n  onRichTextStyleChange,\n  isRedaction,\n  activeTool,\n}) => {\n  const [\n    fonts,\n  ] = useSelector(\n    (state) => [\n      selectors.getFonts(state),\n    ],\n    shallowEqual,\n  );\n\n  const [isRichTextEditMode, setIsRichTextEditMode] = useState(false);\n  const [format, setFormat] = useState({});\n  const editorRef = useRef(null);\n  const annotationRef = useRef(null);\n  const propertiesRef = useRef({});\n  const dispatch = useDispatch();\n  const oldSelectionRef = useRef();\n\n  useEffect(() => {\n    const handleSelectionChange = (range, oldRange) => {\n      const shouldRestoreLostSelection = !range && oldRange && editorRef.current;\n      if (shouldRestoreLostSelection) {\n        editorRef.current.setSelection(oldRange.index, oldRange.length);\n      }\n      if (range && editorRef.current) {\n        setFormat(getFormat(range));\n      }\n    };\n    const handleTextChange = () => {\n      setFormat(getFormat(editorRef.current?.getSelection()));\n    };\n    core.addEventListener('editorSelectionChanged', handleSelectionChange);\n    core.addEventListener('editorTextChanged', handleTextChange);\n    // Have to disable instead of closing because annotation popup will reopen itself\n    dispatch(actions.disableElements([DataElements.ANNOTATION_STYLE_POPUP]));\n    return () => {\n      core.removeEventListener('editorSelectionChanged', handleSelectionChange);\n      core.removeEventListener('editorTextChanged', handleTextChange);\n      dispatch(actions.enableElements([DataElements.ANNOTATION_STYLE_POPUP]));\n    };\n  }, []);\n\n  useEffect(() => {\n    editorRef.current = editor;\n    annotationRef.current = annotation;\n    if (isRichTextEditMode && annotation) {\n      let StrokeStyle = 'solid';\n      try {\n        StrokeStyle = (annotation['Style'] === 'dash')\n          ? `${annotation['Style']},${annotation['Dashes']}`\n          : annotation['Style'];\n      } catch (err) {\n        console.error(err);\n      }\n      const richTextStyles = annotation.getRichTextStyle();\n      const stylesTemp = richTextStyles[0];\n\n      propertiesRef.current = {\n        Font: annotation.Font,\n        FontSize: annotation.FontSize,\n        TextAlign: annotation.TextAlign,\n        TextVerticalAlign: annotation.TextVerticalAlign,\n        bold: stylesTemp?.['font-weight'] === 'bold' ?? false,\n        italic: stylesTemp?.['font-style'] === 'italic' ?? false,\n        underline: stylesTemp?.['text-decoration']?.includes('underline')\n          || stylesTemp?.['text-decoration']?.includes('word'),\n        strikeout: stylesTemp?.['text-decoration']?.includes('line-through') ?? false,\n        StrokeStyle,\n        calculatedFontSize: annotation.getCalculatedFontSize()\n      };\n    }\n\n    setFormat(getFormat(editorRef.current?.getSelection()));\n\n    if (oldSelectionRef.current) {\n      editorRef.current.setSelection(oldSelectionRef.current);\n      oldSelectionRef.current = null;\n    }\n  }, [annotation, editor, isRichTextEditMode]);\n\n  useEffect(() => {\n    const handleEditorBlur = () => {\n      editorRef.current = null;\n      annotationRef.current = null;\n      setIsRichTextEditMode(false);\n    };\n    const handleEditorFocus = () => {\n      setIsRichTextEditMode(true);\n    };\n\n    core.addEventListener('editorBlur', handleEditorBlur);\n    core.addEventListener('editorFocus', handleEditorFocus);\n    return () => {\n      core.removeEventListener('editorBlur', handleEditorBlur);\n      core.removeEventListener('editorFocus', handleEditorFocus);\n    };\n  }, [dispatch]);\n\n\n  const getFormat = (range) => {\n    if (!range) {\n      return {};\n    }\n\n    const format = editorRef.current.getFormat(range.index, range.length);\n\n    if (typeof format.color === 'string') {\n      format.color = new window.Core.Annotations.Color(format.color);\n    } else if (Array.isArray(format.color)) {\n      // the selection contains multiple color, so we set the current color to the last selected color\n      const lastSelectedColor = new window.Core.Annotations.Color(format.color[format.color.length - 1]);\n      format.color = lastSelectedColor;\n    } else if (!format.color) {\n      format.color = annotationRef.current.TextColor;\n    }\n\n    return format;\n  };\n\n  const handleTextFormatChange = (format) => () => {\n    let { index, length } = editorRef.current.getSelection();\n    if (length === 0) {\n      oldSelectionRef.current = { index, length };\n      const newSelection = editorRef.current.getSelection();\n      index = newSelection.index;\n      length = newSelection.length;\n    }\n    const currentFormat = editorRef.current.getFormat(index, length);\n\n    applyFormat(format, !currentFormat[format]);\n  };\n\n  const handleColorChange = (name, color) => {\n    if (!isRichTextEditMode) {\n      onPropertyChange(name, color);\n      return;\n    }\n    applyFormat('color', color.toHexString());\n  };\n\n  const applyFormat = (formatKey, value) => {\n    editorRef.current?.format(formatKey, value);\n\n    if (formatKey === 'color') {\n      value = new window.Core.Annotations.Color(value);\n    }\n\n    // format the entire editor doesn't trigger the editorTextChanged event, so we set the format state here\n    setFormat({\n      ...format,\n      [formatKey]: value\n    });\n  };\n\n  const adjustFreeTextBoundingBox = (annotation) => {\n    const { FreeTextAnnotation } = window.Core.Annotations;\n    if (annotation instanceof FreeTextAnnotation && annotation.getAutoSizeType() !== FreeTextAnnotation.AutoSizeTypes.NONE) {\n      const doc = core.getDocument();\n      const pageNumber = annotation['PageNumber'];\n      const pageInfo = doc.getPageInfo(pageNumber);\n      const pageMatrix = doc.getPageMatrix(pageNumber);\n      const pageRotation = doc.getPageRotation(pageNumber);\n      annotation.fitText(pageInfo, pageMatrix, pageRotation);\n    }\n  };\n\n  // onPropertyChange\n  const handlePropertyChange = (property, value) => {\n    if (!isRichTextEditMode) {\n      onPropertyChange(property, value);\n      return;\n    }\n\n    const { index, length } = editorRef.current.getSelection();\n    const annotation = annotationRef.current;\n    annotation[property] = value;\n    editorRef.current.blur();\n    if (property === 'FontSize' || property === 'Font') {\n      adjustFreeTextBoundingBox(annotation);\n    }\n    setTimeout(() => {\n      oldSelectionRef.current = { index, length };\n      const editBoxManager = core.getAnnotationManager().getEditBoxManager();\n      editBoxManager.focusBox(annotation);\n    }, 0);\n  };\n\n\n  // onRichTextStyleChange\n  const handleRichTextStyleChange = (property, value) => {\n    if (!isRichTextEditMode) {\n      onRichTextStyleChange(property, value);\n      return;\n    }\n\n    const propertyTranslation = {\n      'font-weight': 'bold',\n      'font-style': 'italic',\n      'underline': 'underline',\n      'line-through': 'strike',\n    };\n    handleTextFormatChange(propertyTranslation[property])();\n  };\n\n\n  let properties = {};\n\n  const { RichTextStyle } = style;\n  const defulats = {\n    bold: RichTextStyle?.[0]?.['font-weight'] === 'bold' ?? false,\n    italic: RichTextStyle?.[0]?.['font-style'] === 'italic' ?? false,\n    underline: RichTextStyle?.[0]?.['text-decoration']?.includes('underline') || RichTextStyle?.[0]?.['text-decoration']?.includes('word'),\n    strikeout: RichTextStyle?.[0]?.['text-decoration']?.includes('line-through') ?? false,\n    StrokeStyle: 'solid',\n  };\n\n  properties = {\n    ...style,\n    ...defulats,\n  };\n\n  if (isRichTextEditMode && annotation) {\n    propertiesRef.current.bold = format.bold;\n    propertiesRef.current.italic = format.italic;\n    propertiesRef.current.underline = format.underline;\n    propertiesRef.current.strikeout = format.strike;\n  }\n\n  return (\n    <div className=\"RichTextStyleEditor\"\n      onMouseDown={(e) => {\n        if (e.type !== 'touchstart') {\n          e.preventDefault();\n        }\n      }}\n    >\n      <div className=\"menu-items\">\n        <TextStylePicker\n          fonts={fonts}\n          onPropertyChange={handlePropertyChange}\n          onRichTextStyleChange={handleRichTextStyleChange}\n          properties={isRichTextEditMode ? propertiesRef.current : properties}\n          stateless={true}\n          isFreeText={!isRedaction}\n          onFreeTextSizeToggle={onFreeTextSizeToggle}\n          isFreeTextAutoSize={isFreeTextAutoSize}\n          isRedaction={isRedaction}\n        />\n      </div>\n      <ColorPicker\n        onColorChange={(color) => {\n          handleColorChange('TextColor', new window.Core.Annotations.Color(color));\n        }}\n        color={isRichTextEditMode ? format.color : style['TextColor']}\n        activeTool={activeTool}\n        type={'Text'}\n      />\n    </div>\n  );\n};\nRichTextStyleEditor.propTypes = propTypes;\n\nexport default React.memo(RichTextStyleEditor);\n","import RichTextStyleEditor from './RichTextStyleEditor';\n\nexport default RichTextStyleEditor;","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./StylePicker.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".StylePicker{padding-top:16px;display:flex;flex-direction:column}.StylePicker .slider-property{font-size:14px;font-weight:700;margin-bottom:8px}.StylePicker .StyleOption{margin-top:16px}.StylePicker .StyleOption .styles-container .styles-title{margin:0 0 8px;font-size:14px;font-weight:700}.StylePicker .StyleOption .styles-container [data-element=borderStylePicker]{margin-top:8px}.StylePicker .StyleOption .slider .slider-element-container{margin-left:-3px}.StylePicker .PanelSection .PanelSubsection{margin-bottom:12px}.StylePicker .PanelSection .PanelSubsection .menu-subtitle{font-size:14px;font-weight:700;margin-bottom:12px}.StylePicker .PanelSection .collapsible-menu{width:100%;display:flex;cursor:pointer;position:relative;align-items:center;margin-bottom:16px}.StylePicker .PanelSection .collapsible-menu .menu-title{padding-top:6px;padding-bottom:6px;font-weight:700;font-size:16px}.StylePicker .PanelSection .collapsible-menu .icon-container{position:absolute;right:0;display:flex;align-items:center;justify-content:center;text-align:center;min-width:28px;min-height:28px;border-radius:4px}.StylePicker .PanelSection .collapsible-menu .icon-container .Icon{height:18px;width:18px;color:var(--icon-color)}.StylePicker .PanelSection .collapsible-menu .icon-container:hover{background:var(--view-header-button-hover)}.StylePicker .PanelSection .divider{background-color:var(--divider);width:100%;height:1px;margin:16px 0}.StylePicker .PanelSection .menu-items .ColorPalette{margin-bottom:8px}.StylePicker .spacer{width:100%;margin-top:16px}.StylePicker .Dropdown,.StylePicker .FontSizeDropdown,.StylePicker .overlay-text-input{height:32px}.StylePicker .lineStyleContainer{margin-bottom:0}.StylePicker .lineStyleContainer .StylePicker-LineStyle{display:flex;flex-direction:row;grid-column-gap:8px;-moz-column-gap:8px;column-gap:8px;justify-content:space-between}.StylePicker .lineStyleContainer .StylePicker-LineStyle button.Dropdown{width:100%!important}.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__items,.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__wrapper{width:100%}.StylePicker .lineStyleContainer .StylePicker-LineStyle .linestyle-image svg{width:35px;margin-top:11px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .linestyle-image.shift-alignment svg{margin-top:8px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__items .linestyle-image svg{width:45px}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .linestyle-image.shift-alignment{padding-top:0}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .linestyle-image.shift-alignment svg{margin-top:11px}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .Dropdown__items{top:-197px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .StyleOptions{max-width:80px}.StylePicker .lineStyleContainer .StylePicker-LineStyle>*{flex-grow:1;flex-basis:0}\", \"\"]);\n\n// exports\n","import SnapModeToggle from './SnapModeToggle';\n\nexport default SnapModeToggle;","import React from 'react';\nimport { workerTypes } from 'constants/types';\nimport core from 'core';\nimport i18next from 'i18next';\nimport Choice from 'components/Choice/Choice';\nimport getMeasurementTools from 'helpers/getMeasurementTools';\nimport actions from 'actions';\nimport { useDispatch } from 'react-redux';\n\nconst SnapModeToggle = ({\n  Scale,\n  Precision,\n  isSnapModeEnabled,\n}) => {\n  const dispatch = useDispatch();\n\n  const wasDocumentSwappedToClientSide =\n    core.getDocument()?.getType() === workerTypes.WEBVIEWER_SERVER && core.getDocument().isWebViewerServerDocument();\n  const isEligibleDocumentForSnapping = core.getDocument()?.getType().toLowerCase() === workerTypes.PDF || wasDocumentSwappedToClientSide;\n  const showMeasurementSnappingOption = Scale && Precision && isEligibleDocumentForSnapping && core.isFullPDFEnabled();\n\n  const onSnappingChange = (event) => {\n    if (!core.isFullPDFEnabled()) {\n      return;\n    }\n\n    const enableSnapping = event.target.checked;\n    const mode = enableSnapping\n      ? core.getDocumentViewer().SnapMode.e_DefaultSnapMode | core.getDocumentViewer().SnapMode.POINT_ON_LINE\n      : null;\n    const measurementTools = getMeasurementTools();\n\n    measurementTools.forEach((tool) => {\n      tool.setSnapMode?.(mode);\n    });\n\n    dispatch(actions.setEnableSnapMode(enableSnapping));\n  };\n\n  return (\n    <>\n      {showMeasurementSnappingOption && (\n        <div className=\"snapping-option\">\n          <Choice\n            dataElement=\"measurementSnappingOption\"\n            id=\"measurement-snapping\"\n            type=\"checkbox\"\n            label={i18next.t('option.shared.enableSnapping')}\n            checked={isSnapModeEnabled}\n            onChange={onSnappingChange}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SnapModeToggle;","\nimport core from 'core';\n\nconst Tools = window.Core.Tools;\n\nexport const shouldHideStylePanelOptions = (toolName) => {\n  const toolsNoStylePanelOptions = [\n    Tools.SignatureFormFieldCreateTool,\n    Tools.CheckBoxFormFieldCreateTool,\n    Tools.RadioButtonFormFieldCreateTool,\n    Tools.AddParagraphTool,\n    Tools.AddImageContentTool,\n  ];\n\n  return toolsNoStylePanelOptions.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const hasFillColorAndCollapsablePanelSections = (toolName) => {\n  const toolsWithCollapsedStylePanels = [\n    Tools.RectangleCreateTool,\n    Tools.EllipseCreateTool,\n    Tools.PolygonCreateTool,\n    Tools.PolygonCloudCreateTool,\n    Tools.EllipseMeasurementCreateTool,\n    Tools.AreaMeasurementCreateTool,\n    Tools.FreeTextCreateTool,\n    Tools.CalloutCreateTool,\n    Tools.RedactionCreateTool,\n  ];\n\n  return toolsWithCollapsedStylePanels.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideStrokeSlider = (toolName) => {\n  const toolsWithHiddenStrokeSlider = [\n    Tools.TextUnderlineCreateTool,\n    Tools.TextHighlightCreateTool,\n    Tools.TextSquigglyCreateTool,\n    Tools.TextStrikeoutCreateTool,\n    Tools.CountMeasurementCreateTool,\n    Tools.RubberStampCreateTool,\n  ];\n  return toolsWithHiddenStrokeSlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldShowTextStyle = (toolName) => {\n  const toolsWithHiddenStrokeSlider = [\n    Tools.FreeTextCreateTool,\n    Tools.CalloutCreateTool,\n    Tools.RedactionCreateTool,\n  ];\n  return toolsWithHiddenStrokeSlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideOpacitySlider = (toolName) => {\n  const toolsWithHiddenOpacitySlider = [Tools.TextFormFieldCreateTool, Tools.RedactionCreateTool];\n  return toolsWithHiddenOpacitySlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const hasSnapModeCheckbox = (toolName) => {\n  const toolsWithSnapModeCheckbox = [\n    Tools.DistanceMeasurementCreateTool,\n    Tools.ArcMeasurementCreateTool,\n    Tools.PerimeterMeasurementCreateTool,\n    Tools.AreaMeasurementCreateTool,\n    Tools.RectangularAreaMeasurementCreateTool,\n    Tools.CloudyRectangularAreaMeasurementCreateTool,\n  ];\n  return toolsWithSnapModeCheckbox.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideTransparentFillColor = (toolName) => {\n  const toolsWithHiddenTransparentColor = [Tools.RedactionCreateTool];\n  return toolsWithHiddenTransparentColor.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const stylePanelSectionTitles = (toolName, section) => {\n  const toolTitles = {\n    'AnnotationCreateRedaction': {\n      'Title': 'component.redaction',\n      'StrokeColor': 'stylePanel.headings.redactionMarkOutline',\n      'FillColor': 'stylePanel.headings.redactionFill',\n    },\n  };\n  return toolTitles[toolName] && toolTitles[toolName][section];\n};","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './StylePicker.scss';\nimport ColorPicker from './ColorPicker';\nimport Slider from 'components/Slider';\nimport DataElements from 'constants/dataElement';\nimport { circleRadius } from 'constants/slider';\nimport Dropdown from '../Dropdown';\nimport {\n  defaultStartLineStyles,\n  defaultStrokeStyles,\n  defaultEndLineStyles,\n  cloudyStrokeStyle\n} from 'constants/strokeStyleIcons';\nimport Icon from 'components/Icon';\nimport SnapModeToggle from './SnapModeToggle';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport {\n  hasFillColorAndCollapsablePanelSections,\n  stylePanelSectionTitles,\n  shouldHideStrokeSlider,\n  shouldHideOpacitySlider,\n  hasSnapModeCheckbox,\n  shouldShowTextStyle,\n  shouldHideTransparentFillColor,\n} from 'helpers/stylePanelHelper';\nimport useOnFreeTextEdit from 'hooks/useOnFreeTextEdit';\nimport RichTextStyleEditor from '../RichTextStyleEditor';\nimport LabelTextEditor from 'components/LabelTextEditor';\n\nconst withCloudyStyle = defaultStrokeStyles.concat(cloudyStrokeStyle);\n\nconst propTypes = {\n  onStyleChange: PropTypes.func.isRequired,\n  style: PropTypes.object.isRequired,\n  sliderProperties: PropTypes.arrayOf(PropTypes.string),\n  isFreeText: PropTypes.bool,\n  isEllipse: PropTypes.bool,\n  isRedaction: PropTypes.bool,\n  redactionLabelProperties: PropTypes.object,\n  isFreeHand: PropTypes.bool,\n  showLineStyleOptions: PropTypes.bool,\n  isArc: PropTypes.bool,\n  isInFormFieldCreationMode: PropTypes.bool,\n  startLineStyle: PropTypes.string,\n  endLineStyle: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  onLineStyleChange: PropTypes.func,\n  toolName: PropTypes.string,\n  onFreeTextSizeToggle: PropTypes.func,\n  isFreeTextAutoSize: PropTypes.bool,\n  handleRichTextStyleChange: PropTypes.func,\n  activeType: PropTypes.string,\n};\n\nconst MAX_STROKE_THICKNESS = 20;\n\nconst StylePicker = ({\n  onStyleChange,\n  style,\n  isFreeText,\n  isEllipse,\n  isRedaction,\n  isFreeHand,\n  showLineStyleOptions,\n  isArc,\n  isInFormFieldCreationMode,\n  startLineStyle,\n  endLineStyle,\n  strokeStyle,\n  onLineStyleChange,\n  toolName,\n  onFreeTextSizeToggle,\n  isFreeTextAutoSize,\n  handleRichTextStyleChange,\n  activeTool,\n}) => {\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n  const [strokeColor, setStrokeColor] = useState(style.StrokeColor);\n  const [startingLineStyle, setStartingLineStyle] = useState(startLineStyle);\n  const [endingLineStyle, setEndingLineStyle] = useState(endLineStyle);\n  const [strokeLineStyle, setStrokeLineStyle] = useState(strokeStyle);\n  const [fillColor, setFillColor] = useState(style.FillColor);\n\n  const showStrokeStyle = true;\n  const showFillColorAndCollapsablePanelSections = hasFillColorAndCollapsablePanelSections(toolName);\n  const hideStrokeSlider = shouldHideStrokeSlider(toolName);\n  const showSnapModeCheckbox = hasSnapModeCheckbox(toolName);\n  const showTextStyle = shouldShowTextStyle(toolName);\n\n  useEffect(() => {\n    if (showFillColorAndCollapsablePanelSections) {\n      if (showTextStyle) {\n        dispatch(actions.openElement(DataElements.RICH_TEXT_STYLE_CONTAINER));\n      } else {\n        dispatch(actions.openElement(DataElements.STROKE_STYLE_CONTAINER));\n      }\n    }\n  }, [toolName]);\n\n  useEffect(() => {\n    setStrokeColor(style.StrokeColor);\n    setFillColor(style.FillColor);\n  }, [strokeColor, fillColor, style]);\n\n  useEffect(() => {\n    setStrokeColor(style.StrokeColor);\n    setStartingLineStyle(startLineStyle);\n    setStrokeLineStyle(strokeStyle);\n    setEndingLineStyle(endLineStyle);\n  }, [startLineStyle, endLineStyle, strokeStyle]);\n\n  const onStrokeColorChange = (color) => {\n    onStyleChange?.('StrokeColor', color);\n    setStrokeColor(color);\n  };\n\n  const onStartLineStyleChange = (style) => {\n    onLineStyleChange?.('start', style);\n    setStartingLineStyle(style);\n  };\n\n  const onStrokeStyleChange = (style, value) => {\n    if (value) {\n      onLineStyleChange?.(style, value);\n      setStrokeLineStyle(value);\n    } else {\n      onLineStyleChange?.('middle', style);\n      setStrokeLineStyle(style);\n    }\n  };\n\n  const onEndLineStyleChange = (style) => {\n    onLineStyleChange?.('end', style);\n    setEndingLineStyle(style);\n  };\n\n  const onFillColorChange = (color) => {\n    onStyleChange?.('FillColor', color);\n    setFillColor(color);\n  };\n\n  const onSliderChange = (property, value) => {\n    onStyleChange?.(property, value);\n  };\n\n  // We do not have sliders to show up for redaction annots\n  if (isRedaction) {\n    style.Opacity = null;\n    style.StrokeThickness = null;\n  }\n\n  const [\n    isSnapModeEnabled,\n    isStyleOptionDisabled,\n    isStrokeStyleContainerActive,\n    isFillColorContainerActive,\n    isOpacityContainerActive,\n    isTextStyleContainerActive,\n  ] = useSelector((state) => [\n    selectors.isSnapModeEnabled(state),\n    selectors.isElementDisabled(state, DataElements.STYLE_OPTION),\n    selectors.isElementOpen(state, DataElements.STROKE_STYLE_CONTAINER),\n    selectors.isElementOpen(state, DataElements.FILL_COLOR_CONTAINER),\n    selectors.isElementOpen(state, DataElements.OPACITY_CONTAINER),\n    selectors.isElementOpen(state, DataElements.RICH_TEXT_STYLE_CONTAINER),\n  ]);\n\n  const panelItems = {\n    [DataElements.STROKE_STYLE_CONTAINER]: isStrokeStyleContainerActive,\n    [DataElements.FILL_COLOR_CONTAINER]: isFillColorContainerActive,\n    [DataElements.OPACITY_CONTAINER]: isOpacityContainerActive,\n    [DataElements.RICH_TEXT_STYLE_CONTAINER]: isTextStyleContainerActive,\n  };\n\n  const togglePanelItem = (dataElement) => {\n    if (!panelItems[dataElement]) {\n      dispatch(actions.openElement(dataElement));\n    } else {\n      dispatch(actions.closeElement(dataElement));\n    }\n  };\n  const openTextStyleContainer = () => {\n    dispatch(actions.openElements(DataElements.RICH_TEXT_EDITOR));\n    togglePanelItem(DataElements.RICH_TEXT_STYLE_CONTAINER);\n  };\n  const openStrokeStyleContainer = () => togglePanelItem(DataElements.STROKE_STYLE_CONTAINER);\n  const openFillColorContainer = () => togglePanelItem(DataElements.FILL_COLOR_CONTAINER);\n  const openOpacityContainer = () => togglePanelItem(DataElements.OPACITY_CONTAINER);\n\n  const getSliderProps = (type) => {\n    const { Opacity, StrokeThickness } = style;\n\n    const lineStart = circleRadius;\n    switch (type.toLowerCase()) {\n      case 'opacity':\n        if (Opacity === null) {\n          return null;\n        }\n        return {\n          property: 'Opacity',\n          displayProperty: 'opacity',\n          value: Opacity,\n          getDisplayValue: (Opacity) => `${Math.round(Opacity * 100)}%`,\n          dataElement: DataElements.OPACITY_SLIDER,\n          getCirclePosition: (lineLength, Opacity) => Opacity * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => circlePosition,\n          withInputField: true,\n          inputFieldType: 'number',\n          min: 0,\n          max: 100,\n          step: 1,\n          getLocalValue: (opacity) => parseInt(opacity) / 100,\n        };\n      case 'strokethickness':\n        if (StrokeThickness === null) {\n          return null;\n        }\n        return {\n          property: 'StrokeThickness',\n          displayProperty: 'thickness',\n          value: StrokeThickness,\n          getDisplayValue: (strokeThickness) => {\n            const placeOfDecimal =\n              Math.floor(strokeThickness) !== strokeThickness\n                ? strokeThickness?.toString().split('.')[1].length || 0\n                : 0;\n            if (StrokeThickness === 0 || (StrokeThickness >= 1 && (placeOfDecimal > 2 || placeOfDecimal === 0))) {\n              return `${Math.round(strokeThickness)}pt`;\n            }\n            return `${parseFloat(strokeThickness).toFixed(2)}pt`;\n          },\n          dataElement: DataElements.STROKE_THICKNESS_SLIDER,\n          getCirclePosition: (lineLength, strokeThickness) => (strokeThickness / MAX_STROKE_THICKNESS) * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => {\n            if (circlePosition >= 1 / MAX_STROKE_THICKNESS) {\n              return Math.round(circlePosition * MAX_STROKE_THICKNESS);\n            }\n            if (circlePosition >= 0.75 / MAX_STROKE_THICKNESS && circlePosition < 1 / MAX_STROKE_THICKNESS) {\n              return 0.75;\n            }\n            if (circlePosition >= 0.5 / MAX_STROKE_THICKNESS && circlePosition < 0.75 / MAX_STROKE_THICKNESS) {\n              return 0.5;\n            }\n            if (circlePosition >= 0.25 / MAX_STROKE_THICKNESS && circlePosition < 0.5 / MAX_STROKE_THICKNESS) {\n              return 0.25;\n            }\n            if (circlePosition >= 0.08 / MAX_STROKE_THICKNESS && circlePosition < 0.25 / MAX_STROKE_THICKNESS) {\n              return 0.1;\n            }\n            return isFreeText ? 0 : 0.1;\n          },\n          withInputField: true,\n          inputFieldType: 'number',\n          min: isFreeText ? 0 : 0.1,\n          max: MAX_STROKE_THICKNESS,\n          step: 1,\n          getLocalValue: (strokeThickness) => parseFloat(strokeThickness).toFixed(2),\n        };\n    }\n  };\n\n  const renderSlider = (property, shouldHideSliderTitle) => {\n    const sliderProps = getSliderProps(property);\n    if (!sliderProps) {\n      return null;\n    }\n    return (\n      <Slider\n        key={property}\n        {...sliderProps}\n        onStyleChange={onSliderChange}\n        onSliderChange={onSliderChange}\n        shouldHideSliderTitle={shouldHideSliderTitle}\n      />\n    );\n  };\n\n  const renderDivider = () => {\n    if (showFillColorAndCollapsablePanelSections) {\n      return <div className=\"divider\" />;\n    }\n  };\n\n  const onOpenProps = useOnFreeTextEdit();\n\n  return (\n    <div\n      className=\"StylePicker\"\n      onMouseDown={(e) => {\n        if (e.type !== 'touchstart' && e.target.tagName.toUpperCase() !== 'INPUT') {\n          e.preventDefault();\n        }\n      }}\n    >\n      {showTextStyle && (\n        <div className=\"PanelSection TextStyle\">\n          <div\n            className=\"collapsible-menu\"\n            onClick={openTextStyleContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openTextStyleContainer()}\n            role={'toolbar'}\n          >\n            <div className=\"menu-title\">{t(stylePanelSectionTitles(toolName, 'OverlayText') || 'option.stylePopup.textStyle')}</div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isTextStyleContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n          {isTextStyleContainerActive && isRedaction && (\n            <div className=\"PanelSubsection RedactionTextLabel\">\n              <div className=\"menu-subtitle\">{t('stylePanel.headings.redactionTextLabel')}</div>\n              <LabelTextEditor properties={style} onPropertyChange={onStyleChange} placeholderText={t('stylePanel.headings.redactionTextPlaceholder')} />\n            </div>\n          )}\n          {isTextStyleContainerActive && (\n            <RichTextStyleEditor\n              style={style}\n              {...onOpenProps}\n              property={'TextColor'}\n              colorMapKey={'freeText'}\n              isFreeTextAutoSize={isFreeTextAutoSize}\n              onFreeTextSizeToggle={onFreeTextSizeToggle}\n              onPropertyChange={onStyleChange}\n              onRichTextStyleChange={handleRichTextStyleChange}\n              isRedaction={isRedaction}\n              activeTool={activeTool}\n            />\n          )}\n          {renderDivider()}\n        </div>\n      )}\n\n      {showStrokeStyle && (\n        <div className=\"PanelSection\">\n          {showFillColorAndCollapsablePanelSections && (\n            <div\n              className=\"collapsible-menu StrokeColorPicker\"\n              onClick={openStrokeStyleContainer}\n              tabIndex={0}\n              onKeyDown={(e) => e.key === 'Enter' && openStrokeStyleContainer()}\n              role={'toolbar'}\n            >\n              <div className=\"menu-title\">\n                {t(stylePanelSectionTitles(toolName, 'StrokeColor') || 'option.annotationColor.StrokeColor')}\n              </div>\n              <div className=\"icon-container\">\n                <Icon glyph={`icon-chevron-${isStrokeStyleContainerActive ? 'up' : 'down'}`} />\n              </div>\n            </div>\n          )}\n          {(isStrokeStyleContainerActive || !showFillColorAndCollapsablePanelSections) && (\n            <>\n              <div className=\"menu-items\">\n                <ColorPicker onColorChange={onStrokeColorChange} onStyleChange={onStyleChange} color={strokeColor}\n                  activeTool={activeTool} type={'Stroke'}/>\n              </div>\n              {!hideStrokeSlider && <div className=\"StyleOption\">{renderSlider('strokethickness')}</div>}\n              {/*\n                When showLineStyleOptions is true, we want to show the opacity slider together with the stroke slider\n              */}\n              {showLineStyleOptions && <div className=\"StyleOption\">{renderSlider('opacity')}</div>}\n              {!!strokeStyle && !(isInFormFieldCreationMode && !isFreeText) && !isFreeHand && !isArc && (\n                <div className=\"StyleOption\">\n                  <div className=\"styles-container lineStyleContainer\">\n                    <div className=\"styles-title\">Style</div>\n                    <div className=\"StylePicker-LineStyle\">\n                      {showLineStyleOptions && (\n                        <Dropdown\n                          className=\"StylePicker-StartLineStyleDropdown\"\n                          dataElement=\"startLineStyleDropdown\"\n                          images={defaultStartLineStyles}\n                          onClickItem={onStartLineStyleChange}\n                          currentSelectionKey={startingLineStyle}\n                        />\n                      )}\n                      {!isStyleOptionDisabled && (\n                        <Dropdown\n                          className={`StylePicker-StrokeLineStyleDropdown${\n                            !!strokeStyle && !showLineStyleOptions ? ' StyleOptions' : ''\n                          }`}\n                          dataElement=\"middleLineStyleDropdown\"\n                          images={isEllipse || showLineStyleOptions ? defaultStrokeStyles : withCloudyStyle}\n                          onClickItem={onStrokeStyleChange}\n                          currentSelectionKey={strokeLineStyle}\n                        />\n                      )}\n                      {showLineStyleOptions && (\n                        <Dropdown\n                          className=\"StylePicker-EndLineStyleDropdown\"\n                          dataElement=\"endLineStyleDropdown\"\n                          images={defaultEndLineStyles}\n                          onClickItem={onEndLineStyleChange}\n                          currentSelectionKey={endingLineStyle}\n                        />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n          {renderDivider()}\n        </div>\n      )}\n      {showFillColorAndCollapsablePanelSections && (\n        <div className=\"PanelSection\">\n          <div\n            className=\"collapsible-menu FillColorPicker\"\n            onClick={openFillColorContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openFillColorContainer()}\n            role={'toolbar'}\n          >\n            <div className=\"menu-title\">\n              {t(stylePanelSectionTitles(toolName, 'FillColor') || 'option.annotationColor.FillColor')}\n            </div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isFillColorContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n          {isFillColorContainerActive && (\n            <div className=\"menu-items\">\n              <ColorPicker\n                onColorChange={onFillColorChange}\n                onStyleChange={onStyleChange}\n                color={fillColor}\n                hasTransparentColor={!shouldHideTransparentFillColor(toolName)}\n                activeTool={activeTool}\n                type={'Fill'}\n              />\n            </div>\n          )}\n          {!shouldHideOpacitySlider(toolName) && renderDivider()}\n        </div>\n      )}\n\n      <div className=\"PanelSection\">\n        {showFillColorAndCollapsablePanelSections && !shouldHideOpacitySlider(toolName) && (\n          <div\n            className=\"collapsible-menu StrokeColorPicker\"\n            onClick={openOpacityContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openOpacityContainer()}\n            role={'toolbar'}\n          >\n            <div className=\"menu-title\">{t('option.slider.opacity')}</div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isOpacityContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n        )}\n        {/*\n          If showLineStyleOptions is true, then we don't want to show the opacity slider\n          in the bottom because it is already shown before together with the stroke slider\n        */}\n        {!showLineStyleOptions && (isOpacityContainerActive || !showFillColorAndCollapsablePanelSections) && (\n          <div className=\"StyleOption\">{renderSlider('opacity', showFillColorAndCollapsablePanelSections)}</div>\n        )}\n        {showSnapModeCheckbox && renderDivider()}\n      </div>\n      {showSnapModeCheckbox && (\n        <>\n          {/* to avoid inline styling when there's no divider */}\n          {!showFillColorAndCollapsablePanelSections && <div className=\"spacer\" />}\n          <div className=\"PanelSection\">\n            <SnapModeToggle Scale={style.Scale} Precision={style.Precision} isSnapModeEnabled={isSnapModeEnabled} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nStylePicker.propTypes = propTypes;\n\nexport default StylePicker;","import StylePicker from './StylePicker';\n\nexport default StylePicker;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport selectors from 'selectors';\nimport Icon from 'components/Icon';\nimport StylePicker from 'components/StylePicker';\nimport getAnnotationCreateToolNames from 'helpers/getAnnotationCreateToolNames';\nimport { hexToRGBA } from 'helpers/color';\nimport getToolStyles from 'helpers/getToolStyles';\nimport setToolStyles from 'helpers/setToolStyles';\nimport core from 'core';\nimport { getDataWithKey, mapToolNameToKey } from 'constants/map';\nimport handleFreeTextAutoSizeToggle from 'helpers/handleFreeTextAutoSizeToggle';\nimport getTextDecoration from 'helpers/getTextDecoration';\nimport { shouldHideStylePanelOptions, stylePanelSectionTitles } from 'helpers/stylePanelHelper';\nimport defaultTool from 'constants/defaultTool';\n\nconst StylePanel = () => {\n  const [t] = useTranslation();\n\n  const [\n    isPanelOpen,\n    toolButtonObject,\n    isAnnotationToolStyleSyncingEnabled,\n    activeDocumentViewerKey,\n  ] = useSelector((state) => [\n    selectors.isElementOpen(state, 'stylePanel'),\n    selectors.getToolButtonObjects(state),\n    selectors.isAnnotationToolStyleSyncingEnabled(state),\n    selectors.getActiveDocumentViewerKey(state),\n  ]);\n\n  const colorProperties = ['StrokeColor', 'FillColor'];\n  const [showStyles, setShowStyles] = useState(false);\n  const [noToolStyle, setNoToolStyle] = useState(false);\n  const [isEllipse, setIsEllipse] = useState(false);\n  const [isFreeText, setIsFreeText] = useState(false);\n  const [isRedaction, setIsRedaction] = useState(false);\n  const [isFreeHand, setIsFreeHand] = useState(false);\n  const [isArc, setIsArc] = useState(false);\n  const [isInFormFieldCreationMode, setIsInFormFieldCreationMode] = useState(false);\n  const [style, setStyle] = useState({});\n  const [startLineStyle, setStartLineStyle] = useState();\n  const [endLineStyle, setEndLineStyle] = useState();\n  const [strokeStyle, setStrokeStyle] = useState();\n  const [panelTitle, setPanelTitle] = useState(t('stylePanel.headings.styles'));\n  const annotationCreateToolNames = getAnnotationCreateToolNames();\n  const [showLineStyleOptions, setShowLineStyleOptions] = useState(false);\n  const [isAutoSizeFont, setIsAutoSizeFont] = useState(style.isAutoSizeFont);\n  const currentTool = core.getToolMode();\n  const [activeTool, setActiveTool] = useState('Edit');\n\n  useEffect(() => {\n    if (currentTool?.name === 'AnnotationCreateRubberStamp') {\n      core.setToolMode(defaultTool);\n    }\n  }, [currentTool]);\n\n  const getStrokeStyle = (annot) => {\n    const style = annot['Style'];\n    const dashes = annot['Dashes'];\n    if (style !== 'dash') {\n      return style;\n    }\n    return `${style},${dashes}`;\n  };\n\n  const getPanelTitleOnAnnotationSelected = (annot) => {\n    if (annot.isContentEditPlaceholder()) {\n      setPanelTitle(`${t('stylePanel.headings.contentEdit')} ${t('stylePanel.headings.annotation')}`);\n      setNoToolStyle(true);\n      return;\n    }\n    setPanelTitle(`${t(stylePanelSectionTitles(annot.ToolName, 'Title') || toolButtonObject[annot.ToolName].title)} ${t('stylePanel.headings.annotation')}`);\n  };\n\n  const setPanelTitleForSelectedTool = (tool) => {\n    const toolName = tool.name;\n    const title = toolButtonObject[toolName].title;\n    setPanelTitle(`${t(stylePanelSectionTitles(toolName, 'Title') || title)} ${t('stylePanel.headings.tool')}`);\n  };\n\n  const updateStylePanelProps = (annot) => {\n    const extraStyles = {};\n\n    if (annot instanceof window.Core.Annotations.FreeTextAnnotation) {\n      let StrokeStyle = 'solid';\n      try {\n        StrokeStyle = (annot['Style'] === 'dash')\n          ? `${annot['Style']},${annot['Dashes']}`\n          : annot['Style'];\n      } catch (err) {\n        console.error(err);\n      }\n      extraStyles['TextColor'] = annot.TextColor;\n      extraStyles['RichTextStyle'] = annot.getRichTextStyle();\n      extraStyles['Font'] = annot.Font;\n      extraStyles['FontSize'] = annot.FontSize;\n      extraStyles['TextAlign'] = annot.TextAlign;\n      extraStyles['TextVerticalAlign'] = annot.TextVerticalAlign;\n      extraStyles['calculatedFontSize'] = annot.getCalculatedFontSize();\n      extraStyles['StrokeStyle'] = StrokeStyle;\n      extraStyles['isAutoSizeFont'] = annot.isAutoSizeFont();\n      setIsAutoSizeFont(annot.isAutoSizeFont());\n    }\n\n    if (annot instanceof window.Core.Annotations.RedactionAnnotation) {\n      extraStyles['OverlayText'] = annot.OverlayText;\n      extraStyles['Font'] = annot.Font;\n      extraStyles['FontSize'] = annot.FontSize;\n      extraStyles['TextAlign'] = annot.TextAlign;\n    }\n\n    setStyle({\n      ...style,\n      StrokeColor: annot.StrokeColor,\n      StrokeThickness: annot.StrokeThickness,\n      Opacity: annot.Opacity,\n      FillColor: annot.FillColor,\n      ...extraStyles,\n    });\n    setStartLineStyle(annot.getStartStyle ? annot.getStartStyle() : 'None');\n    setEndLineStyle(annot.getEndStyle ? annot.getEndStyle() : 'None');\n    setStrokeStyle(getStrokeStyle(annot));\n  };\n\n  useEffect(() => {\n    const onAnnotationSelected = (annotations, action) => {\n      if (action === 'selected') {\n        setShowStyles(true);\n        if (annotations.length === 1) {\n          getPanelTitleOnAnnotationSelected(annotations[0]);\n          if (shouldHideStylePanelOptions(annotations[0].ToolName)) {\n            setNoToolStyle(true);\n            return;\n          }\n          setNoToolStyle(false);\n          setActiveTool(annotations[0].ToolName);\n          setIsEllipse(annotations[0] instanceof window.Core.Annotations.EllipseAnnotation);\n          setIsFreeText(annotations[0] instanceof window.Core.Annotations.FreeTextAnnotation);\n          setIsRedaction(annotations[0] instanceof window.Core.Annotations.RedactionAnnotation);\n          setIsFreeHand(annotations[0] instanceof window.Core.Annotations.FreeHandAnnotation);\n          setIsArc(annotations[0] instanceof window.Core.Annotations.ArcAnnotation);\n          setIsInFormFieldCreationMode(core.getFormFieldCreationManager().isInFormFieldCreationMode());\n          setShowLineStyleOptions(getDataWithKey(mapToolNameToKey(annotations[0].ToolName)).hasLineEndings);\n          updateStylePanelProps(annotations[0]);\n        } else {\n          setPanelTitle(`${t('stylePanel.headings.annotations')} (${annotations.length})`);\n          annotations.forEach((annot) => {\n            updateStylePanelProps(annot);\n          });\n        }\n      } else if (action === 'deselected') {\n        const currentTool = core.getToolMode();\n        if (currentTool instanceof window.Core.Tools.AnnotationEditTool) {\n          setShowStyles(false);\n        }\n        // reset tool mode to change the tool name in the header\n        core.setToolMode(currentTool.name);\n      }\n    };\n\n    const handleToolModeChange = (newTool) => {\n      if (annotationCreateToolNames.includes(newTool?.name)) {\n        if (!panelTitle) {\n          setShowStyles(false);\n        } else {\n          if (shouldHideStylePanelOptions(newTool?.name)) {\n            setNoToolStyle(true);\n            setShowStyles(true);\n            setPanelTitleForSelectedTool(newTool);\n            return;\n          }\n          setNoToolStyle(false);\n          setActiveTool(newTool.name);\n          setShowLineStyleOptions(getDataWithKey(mapToolNameToKey(newTool.name)).hasLineEndings);\n          setIsEllipse(newTool.name === window.Core.Tools.ToolNames.ELLIPSE);\n          setIsFreeText(newTool.name === window.Core.Tools.ToolNames.FREE_TEXT);\n          setIsRedaction(newTool.name === window.Core.Tools.ToolNames.REDACTION);\n          setIsFreeHand(\n            newTool.name === window.Core.Tools.ToolNames.FREEHAND ||\n            newTool.name === window.Core.Tools.ToolNames.FREEHAND_HIGHLIGHT,\n          );\n          setIsArc(newTool.name === window.Core.Tools.ToolNames.ARC);\n          setIsInFormFieldCreationMode(core.getFormFieldCreationManager().isInFormFieldCreationMode());\n          const toolStyles = getToolStyles(newTool.name);\n\n          if (newTool.name.includes('FreeText') || newTool.name.includes('Callout')) {\n            toolStyles['isAutoSizeFont'] = newTool['defaults']['isAutoSizeFont'];\n            setIsAutoSizeFont(newTool['defaults']['isAutoSizeFont']);\n          }\n\n          setStyle(toolStyles);\n          setStartLineStyle(toolStyles.StartLineStyle);\n          setStrokeStyle(toolStyles.StrokeStyle);\n          setEndLineStyle(toolStyles.EndLineStyle);\n          setShowStyles(true);\n          setPanelTitleForSelectedTool(newTool);\n        }\n      } else {\n        setShowStyles(false);\n      }\n    };\n\n    core.addEventListener('annotationSelected', onAnnotationSelected);\n    core.addEventListener('toolModeUpdated', handleToolModeChange);\n    return () => {\n      core.removeEventListener('annotationSelected', onAnnotationSelected);\n      core.removeEventListener('toolModeUpdated', handleToolModeChange);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isPanelOpen) {\n      const selectedAnnotations = core.getSelectedAnnotations();\n      if (selectedAnnotations.length === 1) {\n        setShowStyles(true);\n        const annot = selectedAnnotations[0];\n        updateStylePanelProps(annot);\n        getPanelTitleOnAnnotationSelected(annot);\n      } else if (selectedAnnotations.length > 1) {\n        setShowStyles(true);\n        setPanelTitle(`${t('stylePanel.headings.annotations')} (${selectedAnnotations.length})`);\n        selectedAnnotations.forEach((annot) => {\n          updateStylePanelProps(annot);\n        });\n      } else {\n        const currentTool = core.getToolMode();\n        if (currentTool) {\n          setShowStyles(true);\n          const toolStyles = getToolStyles(currentTool.name);\n          if (toolStyles) {\n            setStyle(toolStyles);\n            setStartLineStyle(toolStyles.StartLineStyle);\n            setEndLineStyle(toolStyles.EndLineStyle);\n            setStrokeStyle(toolStyles.StrokeStyle);\n          }\n          setPanelTitleForSelectedTool(currentTool);\n        }\n      }\n    }\n  }, [isPanelOpen]);\n\n  const onStyleChange = (property, value) => {\n    const newStyle = { ...style };\n    newStyle[property] = value;\n    setStyle(newStyle);\n\n    const annotationsToUpdate = core.getSelectedAnnotations();\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annot) => {\n        if (colorProperties.includes(property)) {\n          const colorRGB = hexToRGBA(value);\n          const color = new window.Core.Annotations.Color(colorRGB.r, colorRGB.g, colorRGB.b, colorRGB.a);\n          annot[property] = color;\n          if (isAnnotationToolStyleSyncingEnabled) {\n            setToolStyles(annot.ToolName, property, color);\n          }\n        } else {\n          annot[property] = value;\n          if (isAnnotationToolStyleSyncingEnabled) {\n            setToolStyles(annot.ToolName, property, value);\n          }\n        }\n\n        if (property === 'FillColor' && annot instanceof window.Core.Annotations.FreeTextAnnotation) {\n          const editor = annot.getEditor();\n          if (editor?.hasFocus()) {\n            editor.setStyle({ background: value });\n          }\n        }\n\n        core.getAnnotationManager().redrawAnnotation(annot);\n      });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        if (colorProperties.includes(property)) {\n          const colorRGB = hexToRGBA(value);\n          const color = new window.Core.Annotations.Color(colorRGB.r, colorRGB.g, colorRGB.b, colorRGB.a);\n          setToolStyles(currentTool.name, property, color);\n        } else if (property === 'Opacity') {\n          setToolStyles(currentTool.name, 'Opacity', value);\n        } else if (property === 'StrokeThickness') {\n          setToolStyles(currentTool.name, 'StrokeThickness', value);\n        } else {\n          setToolStyles(currentTool.name, property, value);\n        }\n      }\n    }\n  };\n\n  const onLineStyleChange = (section, value) => {\n    const sectionPropertyMap = {\n      start: 'StartLineStyle',\n      middle: 'StrokeStyle',\n      end: 'EndLineStyle',\n    };\n    if (section === 'start') {\n      setStartLineStyle(value);\n    } else if (section === 'middle') {\n      setStrokeStyle(value);\n    } else if (section === 'end') {\n      setEndLineStyle(value);\n    }\n    const annotationsToUpdate = core.getSelectedAnnotations();\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annot) => {\n        if (section === 'start') {\n          annot.setStartStyle(value);\n        } else if (section === 'middle') {\n          const dashes = value.split(',');\n          const lineStyle = dashes.shift();\n          annot.Style = lineStyle;\n          annot.Dashes = dashes;\n        } else if (section === 'end') {\n          annot.setEndStyle(value);\n        }\n        core.getAnnotationManager().redrawAnnotation(annot);\n        if (isAnnotationToolStyleSyncingEnabled) {\n          setToolStyles(annot.ToolName, sectionPropertyMap[section], value);\n        }\n      });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        setToolStyles(currentTool.name, sectionPropertyMap[section], value);\n      }\n    }\n  };\n  const handleAutoSize = () => {\n    const annotationsToUpdate = core.getSelectedAnnotations()[0];\n    if (annotationsToUpdate) {\n      handleFreeTextAutoSizeToggle(annotationsToUpdate, setIsAutoSizeFont, isAutoSizeFont);\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        setToolStyles(currentTool.name, 'isAutoSizeFont', !style.isAutoSizeFont);\n        setIsAutoSizeFont(!isAutoSizeFont);\n      }\n    }\n  };\n\n  const noToolSelected = (\n    <>\n      <div className='style-panel-header'>\n        {t('stylePanel.headings.styles')}\n      </div>\n      <div className=\"no-tool-selected\">\n        <div>\n          <Icon className=\"empty-icon\" glyph=\"style-panel-no-tool-selected\" />\n        </div>\n        <div className=\"msg\">{t('stylePanel.noToolSelected')}</div>\n      </div>\n    </>\n  );\n\n  const handleRichTextStyleChange = (property, value) => {\n    const originalProperty = property;\n    const originalValue = value;\n    const activeToolRichTextStyle = style['RichTextStyle'][0];\n    if (property === 'underline' || property === 'line-through') {\n      value = getTextDecoration({ [property]: value }, activeToolRichTextStyle);\n      property = 'text-decoration';\n    }\n    const richTextStyle = {\n      0: {\n        ...activeToolRichTextStyle,\n        [property]: value,\n      }\n    };\n\n    const annotationsToUpdate = core.getSelectedAnnotations();\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annotation) => {\n        core.updateAnnotationRichTextStyle(annotation, { [originalProperty]: originalValue }, activeDocumentViewerKey);\n      });\n      setStyle({ ...style, 'RichTextStyle': richTextStyle });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        if (typeof currentTool.complete === 'function') {\n          currentTool.complete();\n        }\n        setToolStyles(currentTool.name, 'RichTextStyle', richTextStyle);\n      }\n    }\n  };\n\n  return !showStyles ? (\n    noToolSelected\n  ) : (\n    <>\n      <div className=\"style-panel-header\">{panelTitle}</div>\n      {noToolStyle ? (\n        <div className=\"no-tool-selected\">\n          <div>\n            <Icon className=\"empty-icon\" glyph=\"style-panel-no-tool-selected\" />\n          </div>\n          <div className=\"msg\">{t('stylePanel.noToolStyle')}</div>\n        </div>\n      ) : (\n        <StylePicker\n          sliderProperties={['Opacity', 'StrokeThickness']}\n          style={style}\n          onStyleChange={onStyleChange}\n          isFreeText={isFreeText}\n          isEllipse={isEllipse}\n          isRedaction={isRedaction}\n          isFreeHand={isFreeHand}\n          isArc={isArc}\n          isInFormFieldCreationMode={isInFormFieldCreationMode}\n          showLineStyleOptions={showLineStyleOptions}\n          startLineStyle={startLineStyle}\n          endLineStyle={endLineStyle}\n          strokeStyle={strokeStyle}\n          onLineStyleChange={onLineStyleChange}\n          toolName={core.getToolMode()?.name}\n          onFreeTextSizeToggle={handleAutoSize}\n          isFreeTextAutoSize={isAutoSizeFont}\n          handleRichTextStyleChange={handleRichTextStyleChange}\n          activeTool={activeTool}\n        />\n      )}\n    </>\n  );\n};\n\nexport default StylePanel;","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./StylePanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePanel{display:flex;flex-direction:column;background-color:var(--panel-background);padding-bottom:75px}.StylePanel .style-panel-header{font-size:16px;font-weight:700}.StylePanel .label{padding-top:16px;font-size:14px;font-weight:700}.StylePanel .no-tool-selected{padding-top:36px;display:flex;flex-direction:column;align-items:center;flex:1 1 auto}.StylePanel .no-tool-selected .msg{padding-top:24px;font-size:14px;text-align:center}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePanel .no-tool-selected .msg{line-height:15px;width:146px}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePanel .no-tool-selected .msg{line-height:15px;width:146px}}.StylePanel .no-tool-selected .empty-icon,.StylePanel .no-tool-selected .empty-icon svg{width:55px;height:56px}.StylePanel .no-tool-selected .empty-icon *{fill:var(--gray-5);color:var(--gray-5)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\nimport StylePanel from './StylePanel';\nimport DataElementWrapper from '../DataElementWrapper';\nimport './StylePanel.scss';\n\nconst StylePanelContainer = () => {\n  return (\n    <DataElementWrapper dataElement=\"stylePanel\" className=\"Panel StylePanel\">\n      <StylePanel />\n    </DataElementWrapper>\n  );\n};\n\nexport default StylePanelContainer;","import StylePanelContainer from './StylePanelContainer';\n\nexport default StylePanelContainer;"],"sourceRoot":""}